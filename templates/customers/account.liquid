<div class="account-container-wrapper">
    <div class="account-container">
        <h5 class="title">
            MY ACCOUNT
        </h5>
        <div class="account-menu">
            <div class="menu-item">
                <img src="{{ 'account-details.svg' | asset_url  }}"  />
                <p>Personal details</p>
            </div>
            <div class="menu-item">
                <img src="{{ 'account-orders.svg' | asset_url  }}"/>
                <p>Orders</p>
            </div>
            <div class="menu-item">
                <img src="{{ 'account-tracking-orders.svg' | asset_url  }}" />
                <p>Tracking Orders</p>
            </div>
            <div class="menu-item">
                <img src="{{ 'account-returns.svg' | asset_url  }}" />
                <p>Returns</p>
            </div>
            <div class="menu-item">
                <img src="{{ 'account-logout.svg' | asset_url }}" />
                <p>Log Out</p>
            </div>
        </div>

        <div class="content-wrapper">
            <div class='inside-content' id="personal-info-content">
                <div class="personal-details">
                    <div class="custom-input">
                        <label for="firstname">First Name</label>
                        <input readonly type="text" id="firstname" name="customer[first_name]" value="{{ customer.first_name | escape }}" />
                    </div>
                    <div class="custom-input">
                        <label for="surname">Last Name</label>
                        <input readonly type="text" id="surname" name="customer[last_name]" value="{{ customer.last_name | escape }}" />
                    </div>
                    <div class="custom-input">
                        <label for="surname">Phone</label>
                        <input readonly type="text" id="surname" name="customer[phone]" value="{{ customer.phone | escape }}" />
                    </div>
                    <div class="custom-input">
                        <label for="surname">Email Address</label>
                        <input readonly type="text" id="surname" name="customer[email]" value="{{ customer.email | escape }}" />
                    </div>
                    <div class="custom-input">
                        <label for="company">Company</label>
                        <input readonly type="text" id="company" name="customer[default_address][company]" value="{{ customer.default_address.company | escape }}" />
                    </div>
                    <div class="custom-input">
                        <label for="address1">Address 1</label>
                        <input readonly type="text" id="address1" name="customer[default_address][address1]" value="{{ customer.default_address.address1 | escape }}" />
                    </div>
                    <div class="custom-input">
                        <label for="address2">Address 2</label>
                        <input readonly type="text" id="address2" name="customer[default_address][address2]" value="{{ customer.default_address.address2 | escape }}" />
                    </div>
                    <div class="custom-input">
                        <label for="city">City</label>
                        <input readonly type="text" id="city" name="customer[default_address][city]" value="{{ customer.default_address.city | escape }}" />
                    </div>
                    <div class="custom-input">
                        <label for="country">Country</label>
                        <input readonly type="text" id="country" name="customer[default_address][country]" value="{{ customer.default_address.country | escape }}" />
                    </div>
                    <div class="custom-input">
                        <label for="province">Province</label>
                        <input readonly type="text" id="province" name="customer[default_address][province]" value="{{ customer.default_address.province_code | escape }}" />
                    </div>
                    <div class="custom-input">
                        <label for="postcode">Postal / Zip Code</label>
                        <input readonly type="text" id="postcode" name="customer[default_address][zip]" value="{{ customer.default_address.zip | escape }}" />
                    </div>
                </div>
            
                <div id="RecoverPasswordForm">
                    <div class="section-header section-header--small">
                      <h4 class="section-header__title">{{ "Change your password" }}</h4>
                      <p>{{ "We will send you an email to change your password." }}</p>
                    </div>
                    {% form 'recover_customer_password', class: 'recover_customer_password' %}
            
                    {{ form.errors | default_errors }}
                    {% if form.posted_successfully? %}
                    {% assign reset_success = true %}
                    {% endif %}
            
                    <input style="display: none" type="email" value="{{ customer.email }}" name="email" id="RecoverEmail">
                    <input type="submit" class="btn" value="Send Email" style="margin: 2rem auto;">

                    {% endform %}
                    <div class="note form-success" id="ResetSuccess" style="display:none;">
                        {{ 'customer.recover_password.success' | t }}
                      </div>
                </div>
            </div>
            <div class='inside-content' id="orders-content">
                <div class="orders-list">
                    {% for order in customer.orders %}
                        <div class="order-wrapper">
                            <div class="status">
                                <p> Order Status: {{ order.financial_status_label }} / {{ order.fulfillment_status  }}</p>
                            </div>
                            <div class="info">
                                <div class="order-pieces-info">
                                    <div class="items-count">
                                        <p>Items: {{ order.item_count }}</p>
                                    </div>
                                    {% for orderItem in order.line_items %}
                                        <img src="{{ orderItem.product.featured_image | image_url: width: 100 }}">
                                    {% endfor %}
                                </div>
                                <div class="order-meta-info">
                                    <span> {{ order.created_at | date: "%d.%m.%Y" }}</span>
                                    <span> {{ order.total_price | money_with_currency }}</span>
                                    <a class="see-details" target="_blank" href="{{ order.order_status_url }}">See details</a>
                                </div>
                            </div>
                        </div>
                      {% endfor %}
                </div>
            </div>
            <div class='inside-content' id="tracking-content">
                {% section 'tracking-orders' %}
            </div>
            <div class='inside-content' id="returns-content">
                      <h1><center>Returns</center></h1>
            </div>
            <div class='inside-content' id="logout-content">
                      Logging Out ... 
            </div>
        </div>
    </div>
</div>
<script>
    {% if reset_success %}
        document.getElementById('ResetSuccess').style.display = 'block';
    {% endif %}
</script>
<style>
    .account-container-wrapper {
        width: 100%;
        background-color: var(--color-5);
    }
    .account-container-wrapper .account-container {
        max-width: 740px;
        display: flex;
        flex-direction: column;
        align-items: center;
        flex-wrap: wrap;
        gap: 2rem;
        margin: 0 auto;
        overflow: hidden;

    }
    .account-container h5.title {
        color: var(--color-1);
        font-weight: bold;
    }
    .account-container .account-menu {
        display: flex;
        max-width: 100%;
        justify-content: center;
        gap: 1rem;
        flex-wrap: wrap;
        padding: 0 1rem;
    }
    .account-container .account-menu .menu-item {
        display: flex;
        flex-direction: column;
        align-items: center;
        width: 8rem;
        cursor: pointer;
    }

    .account-container .account-menu .menu-item img {
        width: 4rem;
        height: 4rem;
        border-radius: 100%;
        background-color: #D9D9D9;
    }

    .account-container .account-menu .active-menu-item img {
        background-color: var(--color-3);
    } 

    .account-container .account-menu .menu-item p {
        color: var(--color-4);
        font-size: 1rem;
    }
    .account-container .content-wrapper {
    width: 100%;
    display: flex;
    transition: transform 0.5s ease; 

    }

    .account-container .content-wrapper .inside-content {
        flex: 0 0 100%;
        max-width: 100%;
        height: fit-content;
    }
    .account-container .content-wrapper .custom-input {
        width: calc(50% - 2rem);
        margin-bottom: 1rem;
    }
    .account-container .content-wrapper .custom-input label {
        color: var(--color-2);
        font-weight: 300;
        font-size: 0.75rem;
    }
    .account-container .content-wrapper .custom-input input {
        background-color: unset;
        border: none;
        border-bottom: 2px solid var(--color-1);
        color: var(--color-4);
        height: 2rem;
        padding: 0 0.5rem;
    }

    #personal-info-content {
        display: flex;
        flex-direction: column;
        gap: 2rem;
        padding: 2rem 0;
    }

    #personal-info-content .personal-details {
        display: flex;
        align-items: center;
        flex-wrap: wrap;
        gap: 4rem;
        row-gap: 0;
    }

    #personal-info-content .change-password {
        display: flex;
        align-items: center;
        flex-wrap: wrap;
        gap: 4rem;
        row-gap: 0;
    }
    #personal-info-content .change-password p {
        color: var(--color-4);
        font-weight: bold;
        padding-left: 2rem;
        width: 100%;
        margin: 1rem 0;
    }
    #personal-info-content button {
        width: 15rem;
        margin: 0 auto;
    }

    #orders-content {
        display: flex;
        flex-direction: column;
        gap: 2rem;
        padding: 2rem 0;
    }
    #orders-content .orders-list {
        display: flex;
        flex-direction: column;
        gap: 2rem;
    }

    #orders-content .orders-list .order-wrapper {
        display: flex;
        flex-direction: column;
        padding: 0.5rem;
        border-bottom: 2px solid var(--color-1);
    }
    #orders-content .orders-list .order-wrapper:first-child {
        border-top: 2px solid var(--color-1);
    }

    #orders-content .orders-list .order-wrapper .status {
        font-weight: bold;
        color: var(--color-4);
    }

    #orders-content .orders-list .order-wrapper .info {
        display: flex;
    }

    #orders-content .orders-list .order-wrapper .info .order-pieces-info {
        display: flex;
        align-items: center;
        position: relative;
        padding: 1rem;
        padding-top: 2rem;
        flex-grow: 1;
        overflow: hidden;
        flex-wrap: wrap;
        gap: 1rem;
    }

    #orders-content .orders-list .order-wrapper .info .order-pieces-info .items-count {
        position: absolute;
        top: 0;
        font-size: 0.65rem;
        font-weight: 100;
        color: var(--color-4);
    }

    #orders-content .orders-list .order-wrapper .info .order-pieces-info img {
        border-radius: 50%;
        width: 6rem;
        height: 6rem;
        box-shadow: 0rem 0rem 0.25rem 0.01rem gray;
    }

    #orders-content .orders-list .order-wrapper .info .order-meta-info {
        display: flex;
        flex-direction: column;
        font-size: 1rem;
        color: var(--color-4);
        position: relative;
    }

    #orders-content .orders-list .order-wrapper .info .order-meta-info a {
        position: absolute;
        bottom: 0;
        color: var(--color-4);
        &:hover {
            color: var(--color-1);
        }
    }

    #tracking-content {
        .input-wrapper {
            display: flex;
            flex-direction: column;
            align-items: center;
            gap: 2rem;
            padding: 2rem 0;
            h5 {
                font-weight: bold;
                color: var(--color-4);
            }
            input {
                background-color: unset;
                border: 2px solid var(--color-1);
                border-radius: 2rem;
                color: var(--color-4);
                height: 3rem;
                padding: 0 1rem;
            }
        }
    }

    @media(max-width:767px) {
        .account-container .account-menu .menu-item {
            width: 6rem;
            text-align: center;
        }
        .account-container .account-menu {
            padding: 0;
        }
        .account-container-wrapper {
            padding: 0 1rem;
            .custom-input {
              width: 100% !important;
              label {
                font-size: 16px !important;
              }
            }
        }
        #orders-content .orders-list .order-wrapper .info .order-pieces-info img {
        width: 4rem;
        height: 4rem;
    }
    }
</style>
<script>
    document.addEventListener('DOMContentLoaded', function() {
        const sections = {
            'personal-details': 0,
            'orders': 1,
            'tracking-orders': 2,
            'returns': 3,
            'logout': 4,
        };
        const sectionKeys = Object.keys(sections);
        const menuItems = document.querySelectorAll('.account-container .account-menu .menu-item');
        const contentWrapper = document.querySelector('.content-wrapper');
        const insideContents = document.querySelectorAll('.inside-content');
        const adjustContentHeight = (index) => contentWrapper.style.height =  insideContents[index].offsetHeight + 'px';
        const slideContent = (index) => {
            contentWrapper.style.transform = `translateX(${index * -100}%)`;
            menuItems.forEach((item, i) => {
                i === index
                    ? item.classList.add('active-menu-item')
                    : item.classList.remove('active-menu-item');
            });
            adjustContentHeight(index); 
            updateUrl(sectionKeys[index]);
        }
        menuItems.forEach((item, index) => item.addEventListener('click', () => {
            if (index === 4) {
                const confirmLogout = confirm("Are you sure you want to log out?"); // Show confirmation dialog
                if (confirmLogout) window.location.href = '/account/logout';
                return;
            }
            slideContent(index);
        }));

        const getUrlParam = (name) => {
            const results = new RegExp('[\?&]' + name + '=([^&#]*)').exec(window.location.href);
            if (results == null) return 'personal-details';
            return decodeURI(results[1]) || 'personal-details';
        };

        const updateUrl = (section) => {
            if (history.pushState) {
                const newurl = window.location.protocol + "//" + window.location.host + window.location.pathname + '?section=' + section;
                window.history.pushState({path:newurl},'',newurl);
            }
        };

        const section = getUrlParam('section');
        if (section && sections.hasOwnProperty(section)) slideContent(sections[section]);
        window.onload = () => adjustContentHeight(sections[section]);
    });

//     document.getElementById('customer-info-form')
//         .addEventListener('submit', function(e) {
//         e.preventDefault();
//     const formData = new FormData(this);
//     const object = {};
//     formData.forEach((value, key) => object[key] = value);
//     const jsonData = JSON.stringify(object);

//     fetch('/path/to/your/update/endpoint', {
//         method: 'POST',
//         headers: {
//             'Content-Type': 'application/json',
//         },
//         body: jsonData,
//     })
//     .then(response => response.json())
//     .then(data => {
//         console.log('Success:', data);
//     })
//     .catch((error) => {
//         console.error('Error:', error);
//     });
// });

</script>